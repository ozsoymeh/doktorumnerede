<!DOCTYPE html>
<html lang="de" class="h-full">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Registrierung - Doktorum nerede</title>
    <link href="/css/output.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>
<body class="h-full bg-gray-50 font-sans antialiased">
    <div class="flex min-h-full flex-col justify-center py-12 sm:px-6 lg:px-8">
        <div class="sm:mx-auto sm:w-full sm:max-w-md">
            <a href="/" class="text-center text-2xl font-bold leading-9 tracking-tight text-blue-600 hover:text-blue-700 transition-all duration-200 ease-in-out">
                Doktorum nerede
            </a>
            <h2 class="mt-8 text-center text-2xl font-bold leading-9 tracking-tight text-gray-800">
                Als Arzt registrieren
            </h2>
        </div>

        <div class="mt-10 sm:mx-auto sm:w-full sm:max-w-[480px]">
            <div class="bg-white shadow-sm border-b border-gray-200 sticky top-0 z-50 rounded-2xl px-8 py-10 sm:px-10 hover:shadow-lg transition-all duration-200 ease-in-out">
                <div class="mb-6 text-sm text-gray-700">
                    <p>Sehr geehrte Kollegin, sehr geehrter Kollege,</p>
                    <p class="mt-2">nach der Registrierung können Sie auf Ihrer Profilseite weitere Informationen bearbeiten und Ihr Foto hochladen.</p>
                </div>


                <form class="space-y-6" action="/register" method="POST">
                    <div>
                        <label for="email" class="block text-sm font-semibold text-gray-800 mb-2">E-Mail *</label>
                        <div>
                            <input type="email" id="email" name="email" required
                                class="block w-full border border-gray-300 rounded-lg p-3 text-gray-800 placeholder:text-gray-400 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 ease-in-out sm:text-sm">
                        </div>
                    </div>

                    <div>
                        <label for="password" class="block text-sm font-semibold text-gray-800 mb-2">Passwort *</label>
                        <div>
                            <input type="password" id="password" name="password" required
                                class="block w-full border border-gray-300 rounded-lg p-3 text-gray-800 placeholder:text-gray-400 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 ease-in-out sm:text-sm">
                        </div>
                    </div>

                    <div>
                        <label for="confirmPassword" class="block text-sm font-semibold text-gray-800 mb-2">Passwort wiederholen *</label>
                        <div>
                            <input type="password" id="confirmPassword" name="confirmPassword" required
                                class="block w-full border border-gray-300 rounded-lg p-3 text-gray-800 placeholder:text-gray-400 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 ease-in-out sm:text-sm">
                        </div>
                    </div>

                    <div>
                        <label for="title" class="block text-sm font-semibold text-gray-800 mb-2">Anrede *</label>
                        <div>
                            <select id="title" name="title" required
                                class="block w-full border border-gray-300 rounded-lg p-3 text-gray-800 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 ease-in-out sm:text-sm">
                                <option value="">Bitte wählen</option>
                                <option value="Herr">Herr</option>
                                <option value="Frau">Frau</option>
                            </select>
                        </div>
                    </div>

                    <div>
                        <label for="academicTitle" class="block text-sm font-semibold text-gray-800 mb-2">Akademischer Titel *</label>
                        <div>
                            <input type="text" id="academicTitle" name="academicTitle" required
                                class="block w-full border border-gray-300 rounded-lg p-3 text-gray-800 placeholder:text-gray-400 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 ease-in-out sm:text-sm">
                        </div>
                    </div>

                    <div>
                        <label for="firstName" class="block text-sm font-semibold text-gray-800 mb-2">Vorname *</label>
                        <div>
                            <input type="text" id="firstName" name="firstName" required
                                class="block w-full border border-gray-300 rounded-lg p-3 text-gray-800 placeholder:text-gray-400 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 ease-in-out sm:text-sm">
                        </div>
                    </div>

                    <div>
                        <label for="lastName" class="block text-sm font-semibold text-gray-800 mb-2">Nachname *</label>
                        <div>
                            <input type="text" id="lastName" name="lastName" required
                                class="block w-full border border-gray-300 rounded-lg p-3 text-gray-800 placeholder:text-gray-400 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 ease-in-out sm:text-sm">
                        </div>
                    </div>

                    <div>
                        <label for="mainSpecialty" class="block text-sm font-semibold text-gray-800 mb-2">Fachgebiet *</label>
                        <div>
                            <select id="mainSpecialty" name="mainSpecialty" required
                                class="block w-full border border-gray-300 rounded-lg p-3 text-gray-800 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 ease-in-out sm:text-sm">
                                <option value="">Bitte wählen</option>
                            </select>
                        </div>
                    </div>

                    <div>
                        <label for="address" class="block text-sm font-semibold text-gray-800 mb-2">Adresse</label>
                        <div>
                            <input type="text" id="address" name="address" placeholder="Beginnen Sie mit der Eingabe Ihrer Adresse..."
                                class="block w-full border border-gray-300 rounded-lg p-3 text-gray-800 placeholder:text-gray-400 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 ease-in-out sm:text-sm">
                        </div>
                        <p class="mt-2 text-sm text-gray-500">Wählen Sie eine Adresse aus den Vorschlägen für eine genaue Validierung</p>
                    </div>

                    <div class="hidden">
                        <label for="street" class="block text-sm font-semibold text-gray-800 mb-2">Straße und Hausnummer</label>
                        <div>
                            <input type="text" id="street" name="street"
                                class="block w-full border border-gray-300 rounded-lg p-3 text-gray-800 placeholder:text-gray-400 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 ease-in-out sm:text-sm">
                        </div>
                    </div>

                    <div>
                        <label for="addressLine2" class="block text-sm font-semibold text-gray-800 mb-2">Adresszusatz (optional)</label>
                        <div>
                            <input type="text" id="addressLine2" name="addressLine2" 
                                class="block w-full border border-gray-300 rounded-lg p-3 text-gray-800 placeholder:text-gray-400 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 ease-in-out sm:text-sm"
                                placeholder="z.B. Stiege, Tür, Stockwerk, Gebäude">
                        </div>
                        <p class="mt-2 text-sm text-gray-500">Zusätzliche Informationen zur Adresse, die nicht von Google Maps erfasst werden</p>
                    </div>

                    <div class="hidden">
                        <label for="zipCode" class="block text-sm font-semibold text-gray-800 mb-2">PLZ</label>
                        <div>
                            <input type="text" id="zipCode" name="zipCode" 
                                class="block w-full border border-gray-300 rounded-lg p-3 text-gray-800 placeholder:text-gray-400 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 ease-in-out sm:text-sm">
                        </div>
                    </div>

                    <div class="hidden">
                        <label for="city" class="block text-sm font-semibold text-gray-800 mb-2">Stadt</label>
                        <div>
                            <input type="text" id="city" name="city" 
                                class="block w-full border border-gray-300 rounded-lg p-3 text-gray-800 placeholder:text-gray-400 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 ease-in-out sm:text-sm">
                        </div>
                    </div>

                    <div>
                        <label for="phone" class="block text-sm font-semibold text-gray-800 mb-2">Telefon *</label>
                        <div>
                            <input type="tel" id="phone" name="phone" required
                                class="block w-full border border-gray-300 rounded-lg p-3 text-gray-800 placeholder:text-gray-400 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 ease-in-out sm:text-sm">
                        </div>
                    </div>

                    <div class="flex items-center">
                        <input type="checkbox" id="showEmail" name="showEmail" value="true"
                            class="h-4 w-4 rounded border-gray-300 text-blue-600 focus:ring-blue-500">
                        <label for="showEmail" class="ml-3 block text-sm leading-6 text-gray-700">
                            E-Mail-Adresse öffentlich anzeigen
                        </label>
                    </div>

                    <div class="text-sm text-gray-500">
                        * Pflichtfelder
                    </div>

                    <div>
                        <button type="submit" 
                            class="flex w-full justify-center bg-blue-600 hover:bg-blue-700 text-white font-semibold py-3 px-4 rounded-2xl shadow-md hover:shadow-lg transition-all duration-200 ease-in-out">
                            Registrieren
                        </button>
                    </div>

                    <p class="text-center text-sm text-gray-700">
                        Bereits registriert? 
                        <a href="/login" class="font-semibold leading-6 text-blue-600 hover:text-blue-700 transition-all duration-200 ease-in-out">
                            Hier anmelden
                        </a>
                    </p>
                </form>
            </div>
        </div>
    </div>

    <script>
        // Variablen aus dem Server
        const serverSpecialties = <%- JSON.stringify(specialties) %>;
        
        // Formular-Validierung
        document.addEventListener('DOMContentLoaded', function() {
            const titleSelect = document.getElementById('title');
            const mainSpecialtySelect = document.getElementById('mainSpecialty');
            
            // Befülle das Fachgebiets-Dropdown basierend auf der ausgewählten Anrede
            function updateSpecialties() {
                const gender = titleSelect.value === 'Frau' ? 'female' : 'male';
                
                // Lösche bestehende Optionen
                mainSpecialtySelect.innerHTML = '<option value="">Bitte wählen</option>';
                
                // Füge alle verfügbaren Fachgebiete hinzu
                Object.entries(serverSpecialties[gender]).forEach(([key, value]) => {
                    const option = document.createElement('option');
                    option.value = key;
                    option.textContent = value;
                    mainSpecialtySelect.appendChild(option);
                });
            }
            
            // Initialer Aufruf und Eventlistener
            if (titleSelect) {
                updateSpecialties();
                titleSelect.addEventListener('change', updateSpecialties);
            }
        });

        // Google Maps Places API für Adressvalidierung
        function initAutocomplete() {
            try {
                // Initialisiere den Autocomplete-Service mit verbesserter Konfiguration
                const autocompleteOptions = {
                    componentRestrictions: { country: ['at'] }, // Einschränkung auf Österreich
                    fields: ['address_component', 'geometry', 'name', 'formatted_address']
                    // No types restriction - allows both addresses and businesses (establishments)
                    // minLength removed - using default for better business search
                };
                
                const autocomplete = new google.maps.places.Autocomplete(
                    document.getElementById('address'),
                    autocompleteOptions
                );
                
                // Listener für die Adressauswahl
                autocomplete.addListener('place_changed', function() {
                    try {
                        const place = autocomplete.getPlace();
                        
                        if (!place || !place.geometry) {
                            // Benutzer hat keine Adresse aus der Vorschlagsliste ausgewählt
                            document.getElementById('address').classList.add('border-red-500');
                            return;
                        }
                        
                        document.getElementById('address').classList.remove('border-red-500');
                        
                        // Update address field with formatted address or place name
                        if (place.formatted_address) {
                            document.getElementById('address').value = place.formatted_address;
                        } else if (place.name) {
                            document.getElementById('address').value = place.name;
                        }
                        
                        // Extrahiere Adresskomponenten
                        let street = '';
                        let streetNumber = '';
                        let zipCode = '';
                        let city = '';
                        
                        for (const component of place.address_components || []) {
                            const types = component.types;
                            
                            if (types.includes('route')) {
                                street = component.long_name;
                            }
                            if (types.includes('street_number')) {
                                streetNumber = component.long_name;
                            }
                            if (types.includes('postal_code')) {
                                zipCode = component.long_name;
                            }
                            if (types.includes('locality')) {
                                city = component.long_name;
                            }
                        }
                        
                        // For businesses without route, use place name as street
                        if (!street && place.name) {
                            street = place.name;
                        }
                        
                        // Befülle die verborgenen Felder
                        document.getElementById('street').value = street + (streetNumber ? ' ' + streetNumber : '');
                        document.getElementById('zipCode').value = zipCode;
                        document.getElementById('city').value = city;
                        
                        // Validiere, ob alle erforderlichen Informationen vorhanden sind
                        // More lenient for businesses - they might not have route but have formatted_address
                        if ((!street && !place.name) || !zipCode || !city) {
                            console.warn('Unvollständige Adressdaten:', place);
                            // Still allow form submission - user can manually edit if needed
                        }
                    } catch (error) {
                        console.error('Fehler bei der Verarbeitung der Adresse:', error);
                        // Fallback: Formular kann trotzdem abgesendet werden
                        document.getElementById('street').value = document.getElementById('address').value;
                    }
                });
                
                // Eingabefeld-Event für manuelle Eingabe ohne Auswahl
                document.getElementById('address').addEventListener('blur', function() {
                    setTimeout(() => {
                        const addressField = document.getElementById('address');
                        const streetField = document.getElementById('street');
                        // Wenn keine Straße gesetzt wurde, aber eine Adresse eingegeben wurde
                        if (!streetField.value && addressField.value.trim().length > 0) {
                            // Manuell eingegebene Adresse als Straße übernehmen (Fallback)
                            streetField.value = addressField.value;
                            console.log('Manuelle Adresseingabe übernommen:', addressField.value);
                        }
                    }, 300);
                });
                
                console.log('Google Maps Autocomplete erfolgreich initialisiert');
            } catch (error) {
                console.error('Fehler bei der Initialisierung von Google Maps Autocomplete:', error);
                // Fallback: Adressfeld als normales Eingabefeld verwenden
                document.getElementById('address').addEventListener('blur', function() {
                    document.getElementById('street').value = document.getElementById('address').value;
                });
            }
        }

        // Alternative Initialisierung falls Google Maps API nicht lädt
        window.gm_authFailure = function() {
            console.error('Google Maps Authentifizierungsfehler');
            document.getElementById('address').placeholder = 'Bitte geben Sie Ihre vollständige Adresse ein';
            document.getElementById('address').addEventListener('blur', function() {
                const parts = this.value.split(',');
                if (parts.length > 1) {
                    document.getElementById('street').value = parts[0].trim();
                    const cityParts = parts[1].trim().split(' ');
                    if (cityParts.length > 1) {
                        document.getElementById('zipCode').value = cityParts[0].trim();
                        document.getElementById('city').value = cityParts.slice(1).join(' ').trim();
                    } else {
                        document.getElementById('city').value = cityParts[0].trim();
                    }
                } else {
                    document.getElementById('street').value = this.value;
                }
            });
        };

        // Falls die API nach 5 Sekunden nicht geladen ist, Fallback aktivieren
        setTimeout(function() {
            if (typeof google === 'undefined' || typeof google.maps === 'undefined') {
                gm_authFailure();
            }
        }, 5000);

        // Vor dem Absenden des Formulars: Adressvalidierung mit Fallback
        document.querySelector('form').addEventListener('submit', function(e) {
            const street = document.getElementById('street').value;
            const zipCode = document.getElementById('zipCode').value;
            const city = document.getElementById('city').value;
            const addressField = document.getElementById('address');
            
            // Wenn keine Straße, aber Adresse eingegeben wurde, Adresse als Straße verwenden
            if (!street && addressField.value.trim()) {
                document.getElementById('street').value = addressField.value;
            }
            
            // Adresse ist jetzt kein Pflichtfeld mehr, also muss das Formular immer gesendet werden können
        });
    </script>
    
    <!-- Google Maps Places API laden mit Retry-Option und Timeout -->
    <script>
        let retryCount = 0;
        const maxRetries = 2;
        
        function loadGoogleMapsAPI() {
            const apiKey = "<%= googleMapsApiKey %>";
            if (!apiKey || apiKey === '') {
                console.warn('Google Maps API key not set on register page, skipping load');
                return;
            }
            const script = document.createElement('script');
            script.src = `https://maps.googleapis.com/maps/api/js?key=${apiKey}&libraries=places&callback=initAutocomplete&v=weekly`;
            script.async = true;
            script.defer = true;
            
            script.onerror = function() {
                console.error('Fehler beim Laden der Google Maps API');
                if (retryCount < maxRetries) {
                    retryCount++;
                    console.log(`Versuche Google Maps API erneut zu laden (${retryCount}/${maxRetries})`);
                    setTimeout(loadGoogleMapsAPI, 1000);
                } else {
                    console.error('Maximale Anzahl von Versuchen erreicht');
                    gm_authFailure();
                }
            };
            
            document.head.appendChild(script);
        }
        
        loadGoogleMapsAPI();

        // Show SweetAlert2 error if there's an error message
        <% if (error) { %>
            Swal.fire({
                icon: 'error',
                title: 'Fehler',
                text: '<%= error %>',
                confirmButtonColor: '#ef4444'
            });
        <% } %>
    </script>
</body>
</html>
