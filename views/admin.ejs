<!DOCTYPE html>
<html lang="de">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard - Doktorum nerede</title>
    <link href="/css/output.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>
<body class="bg-gray-100">
    <div class="min-h-screen p-6">
        <nav class="bg-white shadow-md p-4 mb-6 rounded-lg">
            <div class="flex justify-between items-center">
                <h1 class="text-xl font-bold">Admin Dashboard</h1>
                <div class="space-x-4">
                    <button onclick="showChangePasswordModal()" class="text-blue-600 hover:text-blue-800">Passwort ändern</button>
                    <a href="/" class="text-blue-600 hover:text-blue-800">Zur Hauptseite</a>
                    <form action="/logout" method="POST" class="inline">
                        <button type="submit" class="bg-red-600 text-white px-4 py-2 rounded-md hover:bg-red-700">Abmelden</button>
                    </form>
                </div>
            </div>
        </nav>

        <div class="bg-white rounded-lg shadow-md p-6">
            <h2 class="text-2xl font-bold mb-6">Ärzteverwaltung</h2>

            <!-- Filter und Suche -->
            <div class="mb-6">
                <input type="text" id="searchInput" placeholder="Suche nach Name oder E-Mail" 
                    class="w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500">
            </div>

            <!-- Ärzteliste -->
            <div class="overflow-x-auto">
                <table class="min-w-full divide-y divide-gray-200">
                    <thead class="bg-gray-50">
                        <tr>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Name</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">E-Mail</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Registrierungsdatum</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Profil</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Aktionen</th>
                        </tr>
                    </thead>
                    <tbody class="bg-white divide-y divide-gray-200">
                        <% doctors.sort((a, b) => new Date(b.registrationDate) - new Date(a.registrationDate)).forEach(doctor => { %>
                            <tr class="hover:bg-gray-50">
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full 
                                        <%= doctor.isApproved ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800' %>">
                                        <%= doctor.isApproved ? 'Bestätigt' : 'Nicht bestätigt' %>
                                    </span>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <%= doctor.title %> <%= doctor.firstName %> <%= doctor.lastName %>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <%= doctor.email %>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <%= new Date(doctor.registrationDate).toLocaleDateString('de-DE') %>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full 
                                        <%= doctor.isProfileComplete ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800' %>">
                                        <%= doctor.isProfileComplete ? 'Vollständig' : 'Unvollständig' %>
                                    </span>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium space-x-2">
                                    <button onclick="toggleApproval('<%= doctor.email %>', <%= doctor.isApproved %>)"
                                        class="text-white px-3 py-1 rounded-md <%= doctor.isApproved ? 'bg-red-600 hover:bg-red-700' : 'bg-green-600 hover:bg-green-700' %>">
                                        <%= doctor.isApproved ? 'Deaktivieren' : 'Bestätigen' %>
                                    </button>
                                    <button onclick="editDoctor('<%= doctor.email %>')"
                                        class="bg-blue-600 text-white px-3 py-1 rounded-md hover:bg-blue-700">
                                        Bearbeiten
                                    </button>
                                    <button onclick="deleteDoctor('<%= doctor.email %>')"
                                        class="bg-red-600 text-white px-3 py-1 rounded-md hover:bg-red-700">
                                        Löschen
                                    </button>
                                </td>
                            </tr>
                        <% }); %>
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Edit Modal -->
    <div id="editModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 hidden">
        <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white">
            <h3 class="text-lg font-medium leading-6 text-gray-900 mb-4">Arzt bearbeiten</h3>
            <form id="editForm" class="space-y-4">
                <div>
                    <label class="block text-sm font-medium text-gray-700">Vorname</label>
                    <input type="text" name="firstName" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm">
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700">Nachname</label>
                    <input type="text" name="lastName" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm">
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700">E-Mail</label>
                    <input type="email" name="email" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm">
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700">Neues Passwort (optional)</label>
                    <input type="password" name="password" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm">
                </div>
                <div class="flex justify-end space-x-2">
                    <button type="button" onclick="closeEditModal()"
                        class="bg-gray-500 text-white px-4 py-2 rounded-md hover:bg-gray-600">
                        Abbrechen
                    </button>
                    <button type="submit"
                        class="bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700">
                        Speichern
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- Change Password Modal -->
    <div id="changePasswordModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 hidden">
        <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white">
            <h3 class="text-lg font-medium leading-6 text-gray-900 mb-4">Admin-Passwort ändern</h3>
            <form id="changePasswordForm" class="space-y-4">
                <div>
                    <label class="block text-sm font-medium text-gray-700">Aktuelles Passwort</label>
                    <input type="password" name="currentPassword" required class="mt-1 block w-full rounded-md border-gray-300 shadow-sm">
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700">Neues Passwort</label>
                    <input type="password" name="newPassword" required class="mt-1 block w-full rounded-md border-gray-300 shadow-sm">
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700">Neues Passwort bestätigen</label>
                    <input type="password" name="confirmPassword" required class="mt-1 block w-full rounded-md border-gray-300 shadow-sm">
                </div>
                <div class="flex justify-end space-x-2">
                    <button type="button" onclick="closeChangePasswordModal()"
                        class="bg-gray-500 text-white px-4 py-2 rounded-md hover:bg-gray-600">
                        Abbrechen
                    </button>
                    <button type="submit"
                        class="bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700">
                        Speichern
                    </button>
                </div>
            </form>
        </div>
    </div>

    <script>
        // Suchfunktion
        document.getElementById('searchInput').addEventListener('input', function(e) {
            const searchText = e.target.value.toLowerCase();
            const rows = document.querySelectorAll('tbody tr');
            
            rows.forEach(row => {
                const text = row.textContent.toLowerCase();
                row.style.display = text.includes(searchText) ? '' : 'none';
            });
        });

        // Arzt Bestätigung/Deaktivierung
        async function toggleApproval(email, currentStatus) {
            try {
                const response = await fetch(`/admin/${currentStatus ? 'disapprove' : 'approve'}/${email}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });
                
                if (response.ok) {
                    location.reload();
                } else {
                    throw new Error('Fehler beim Aktualisieren des Status');
                }
            } catch (error) {
                Swal.fire({
                    icon: 'error',
                    title: 'Fehler',
                    text: error.message
                });
            }
        }

        // Arzt bearbeiten
        let currentEmail = '';
        
        function editDoctor(email) {
            currentEmail = email;
            const doctor = getDoctorByEmail(email);
            const form = document.getElementById('editForm');
            
            form.firstName.value = doctor.firstName;
            form.lastName.value = doctor.lastName;
            form.email.value = doctor.email;
            form.password.value = '';
            
            document.getElementById('editModal').classList.remove('hidden');
        }

        function closeEditModal() {
            document.getElementById('editModal').classList.add('hidden');
        }

        document.getElementById('editForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            try {
                const formData = new FormData(e.target);
                const data = Object.fromEntries(formData.entries());
                
                if (!data.password) delete data.password;
                
                const response = await fetch(`/admin/update/${currentEmail}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                });
                
                if (response.ok) {
                    location.reload();
                } else {
                    throw new Error('Fehler beim Aktualisieren der Daten');
                }
            } catch (error) {
                Swal.fire({
                    icon: 'error',
                    title: 'Fehler',
                    text: error.message
                });
            }
        });

        // Arzt löschen
        async function deleteDoctor(email) {
            const result = await Swal.fire({
                title: 'Sind Sie sicher?',
                text: "Diese Aktion kann nicht rückgängig gemacht werden!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Ja, löschen!',
                cancelButtonText: 'Abbrechen'
            });

            if (result.isConfirmed) {
                try {
                    const response = await fetch(`/admin/delete/${email}`, {
                        method: 'POST'
                    });
                    
                    if (response.ok) {
                        location.reload();
                    } else {
                        throw new Error('Fehler beim Löschen des Arztes');
                    }
                } catch (error) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Fehler',
                        text: error.message
                    });
                }
            }
        }

        // Hilfsfunktionen
        function getDoctorByEmail(email) {
            // Diese Funktion muss implementiert werden, um die Arztdaten aus der Tabelle zu extrahieren
            const row = Array.from(document.querySelectorAll('tbody tr')).find(tr => 
                tr.querySelector('td:nth-child(3)').textContent.trim() === email
            );
            
            if (!row) return null;
            
            const cells = row.querySelectorAll('td');
            const fullName = cells[1].textContent.trim().split(' ');
            
            return {
                firstName: fullName[1],
                lastName: fullName[2],
                email: cells[2].textContent.trim()
            };
        }

        // Admin Passwort ändern
        function showChangePasswordModal() {
            document.getElementById('changePasswordModal').classList.remove('hidden');
        }

        function closeChangePasswordModal() {
            document.getElementById('changePasswordModal').classList.add('hidden');
            document.getElementById('changePasswordForm').reset();
        }

        document.getElementById('changePasswordForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const formData = new FormData(e.target);
            const data = Object.fromEntries(formData.entries());
            
            if (data.newPassword !== data.confirmPassword) {
                Swal.fire({
                    icon: 'error',
                    title: 'Fehler',
                    text: 'Die neuen Passwörter stimmen nicht überein!'
                });
                return;
            }
            
            try {
                const response = await fetch('/admin/change-password', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        currentPassword: data.currentPassword,
                        newPassword: data.newPassword
                    })
                });
                
                const result = await response.json();
                
                if (response.ok) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Erfolg',
                        text: 'Passwort wurde erfolgreich geändert'
                    });
                    closeChangePasswordModal();
                } else {
                    throw new Error(result.message || 'Fehler beim Ändern des Passworts');
                }
            } catch (error) {
                Swal.fire({
                    icon: 'error',
                    title: 'Fehler',
                    text: error.message
                });
            }
        });
    </script>
</body>
</html> 