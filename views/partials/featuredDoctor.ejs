<% if (featuredDoctors && featuredDoctors.length > 0) { %>
<section class="py-16 sm:py-20 lg:py-24 pb-20 sm:pb-20 lg:pb-24 relative bg-cover bg-center bg-no-repeat transition-opacity duration-500" style="background-image: url('/images/section_background_dark02.jpg');">
    <!-- Overlay for better text readability -->
    <div class="absolute inset-0 bg-black/40"></div>
    
    <div class="mx-auto max-w-7xl px-6 lg:px-8 relative z-10">
        <!-- Header -->
        <div class="text-center mb-12">
            <h2 class="text-3xl sm:text-4xl lg:text-5xl font-bold text-white mb-4">
                <%= lang === 'tr' ? 'Doktorlarımızı yakından tanıyalım' : 'Unsere Ärzt*innen näher kennen lernen' %>
            </h2>
        </div>

        <!-- Grid Container with padding to prevent cutting - higher max-height on mobile for vertical stacking -->
        <div class="relative max-h-[1400px] sm:max-h-[800px] py-8 pb-16 sm:pb-8">
            <!-- Grid Wrapper - Render all groups, show/hide with JS -->
            <% 
            const doctorsPerView = 3;
            const maxGroups = Math.ceil(featuredDoctors.length / doctorsPerView);
            for (let groupIndex = 0; groupIndex < maxGroups; groupIndex++) {
                const startIndex = groupIndex * doctorsPerView;
                const endIndex = Math.min(startIndex + doctorsPerView, featuredDoctors.length);
                const groupDoctors = featuredDoctors.slice(startIndex, endIndex);
            %>
            <div class="doctors-group flex flex-col sm:flex-row justify-center items-center sm:items-start gap-4 sm:gap-6 overflow-visible max-w-[1200px] mx-auto px-4 <%= groupIndex === 0 ? '' : 'hidden' %>" data-group="<%= groupIndex %>">
                <% groupDoctors.forEach((doctor, index) => { %>
                    <div class="flex-shrink-0" style="width: 224px; height: 406px;">
                        <div class="bg-white rounded-xl shadow-lg overflow-hidden flex flex-col transition-transform duration-300 ease-in-out hover:-translate-y-5" style="width: 224px; height: 406px; max-width: 224px; max-height: 406px; min-width: 224px; min-height: 406px;">
                            <!-- Profile Photo - Fixed size container (224px × 256px) -->
                            <div class="bg-gray-100 flex-shrink-0 overflow-hidden rounded-t-xl relative" style="width: 224px; height: 256px; max-width: 224px; max-height: 256px; min-width: 224px; min-height: 256px;">
                                <% if (doctor.photo) { %>
                                    <img
                                        src="/uploads/<%= doctor.photo %>"
                                        alt="<%= doctor.academicTitle ? doctor.academicTitle + ' ' : '' %><%= doctor.firstName || '' %> <%= doctor.lastName || '' %>"
                                        style="width: 224px; height: 256px; object-fit: cover; display: block;"
                                        onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';"
                                    />
                                    <div class="hidden absolute inset-0 bg-gray-200 items-center justify-center" style="width: 224px; height: 256px; display: none;">
                                        <svg class="w-16 h-16 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                                        </svg>
                                    </div>
                                <% } else { %>
                                    <div class="absolute inset-0 bg-gray-200 flex items-center justify-center" style="width: 224px; height: 256px;">
                                        <svg class="w-16 h-16 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                                        </svg>
                                    </div>
                                <% } %>
                            </div>
                            <!-- Doctor Info - Fixed height (224px × 150px) with overflow hidden to prevent text from expanding box -->
                            <div class="p-4 flex-1 flex flex-col bg-white overflow-hidden" style="width: 224px; height: 150px; max-width: 224px; max-height: 150px; min-width: 224px; min-height: 150px;">
                                <!-- Name: Always first -->
                                <h3 class="text-base font-semibold text-gray-900 mb-1 truncate" style="width: 100%;">
                                    <%= doctor.firstName || '' %> <%= doctor.lastName || '' %>
                                </h3>
                                <!-- Title: Second on mobile, after specialty on desktop -->
                                <% if (doctor.academicTitle) { %>
                                    <p class="text-xs text-gray-600 mb-2 truncate order-2 sm:order-3" style="width: 100%;">
                                        <%= doctor.academicTitle %>
                                    </p>
                                <% } %>
                                <!-- Specialty: Third on mobile (2 full lines), second on desktop -->
                                <% if (doctor.specialties && doctor.specialties.length > 0) { %>
                                    <p class="text-blue-600 font-medium mb-2 text-sm overflow-hidden order-3 sm:order-2" style="display: -webkit-box; -webkit-line-clamp: 2; -webkit-box-orient: vertical; min-height: 2.5em; width: 100%; line-height: 1.4;">
                                        <%= getTranslatedSpecialty(doctor, lang) || doctor.specialties[0] %>
                                    </p>
                                <% } %>
                                <!-- Profile Link: Always last -->
                                <a href="/doctor/<%= formatNameForUrl(doctor.firstName || '', doctor.lastName || '') %>" 
                                   class="text-blue-600 hover:text-blue-700 font-medium text-xs transition-colors duration-200 ease-in-out underline mt-auto order-last" style="width: 100%;">
                                    <%= lang === 'tr' ? 'Profil ansehen →' : 'Zum Profil →' %>
                                </a>
                            </div>
                        </div>
                    </div>
                <% }); %>
            </div>
            <% } %>

            <!-- Carousel Indicators (Dots) -->
            <% if (featuredDoctors.length > 3) { %>
                <div class="flex justify-center mt-8 space-x-3">
                    <% for (let i = 0; i < maxGroups; i++) { %>
                        <button 
                            class="carousel-indicator w-3 h-3 rounded-full bg-white/50 hover:bg-white/80 transition-all duration-200 <%= i === 0 ? 'bg-white w-3 h-3' : '' %>"
                            data-slide="<%= i %>"
                            onclick="goToSlide(<%= i %>)"
                            aria-label="Go to slide <%= i + 1 %>"
                        ></button>
                    <% } %>
                </div>
            <% } %>
        </div>
    </div>
</section>

<script>
(function() {
    const doctorsGroups = document.querySelectorAll('.doctors-group');
    if (doctorsGroups.length <= 1) return; // No rotation needed if 1 or fewer groups
    
    let currentIndex = 0;
    const maxGroups = doctorsGroups.length;
    let autoRotateInterval;
    
    function updateDisplay() {
        doctorsGroups.forEach((group, index) => {
            if (index === currentIndex) {
                group.classList.remove('hidden');
            } else {
                group.classList.add('hidden');
            }
        });
        
        // Update indicators
        document.querySelectorAll('.carousel-indicator').forEach((indicator, i) => {
            if (i === currentIndex) {
                indicator.classList.remove('bg-white/50');
                indicator.classList.add('bg-white');
            } else {
                indicator.classList.remove('bg-white');
                indicator.classList.add('bg-white/50');
            }
        });
    }
    
    function nextSlide() {
        currentIndex = (currentIndex + 1) % maxGroups;
        updateDisplay();
    }
    
    window.goToSlide = function(index) {
        currentIndex = index;
        updateDisplay();
    };
    
    // Auto-rotate every 20 seconds
    function startAutoRotate() {
        if (autoRotateInterval) clearInterval(autoRotateInterval);
        autoRotateInterval = setInterval(nextSlide, 20000);
    }
    
    // Pause on hover
    const container = document.querySelector('.relative.max-h-\\[800px\\]');
    if (container) {
        container.addEventListener('mouseenter', function() {
            if (autoRotateInterval) clearInterval(autoRotateInterval);
        });
        
        container.addEventListener('mouseleave', function() {
            startAutoRotate();
        });
    }
    
    // Initialize
    startAutoRotate();
})();
</script>
<% } %>
