<!DOCTYPE html>
<html lang="de" class="h-full bg-gray-50">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Profil bearbeiten</title>
    <link href="/css/output.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>
<body class="h-full">
    <div class="min-h-full">
        <!-- Header -->
        <nav class="bg-white shadow-sm border-b border-gray-200 sticky top-0 z-50">
            <div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
                <div class="flex h-16 justify-between">
                    <div class="flex items-center space-x-4">
                        <a href="/" class="flex items-center text-blue-600 font-semibold">
                            ← Startseite
                        </a>
                    </div>
                    <div class="flex items-center">
                        <form action="/logout" method="POST">
                            <button type="submit" class="rounded-lg bg-white px-3 py-2 text-sm font-semibold text-gray-800 border border-gray-300 hover:bg-gray-50">
                                Abmelden
                            </button>
                        </form>
                    </div>
                </div>
            </div>
        </nav>

        <main>
            <div class="mx-auto max-w-7xl py-6 sm:px-6 lg:px-8">
                <form id="profileForm" action="/profile/edit" method="POST" enctype="multipart/form-data">
                    <div class="space-y-12">
                        <!-- Profilbereich -->
                        <div class="border-b border-gray-200 pb-12">
                            <h2 class="text-base font-bold leading-7 text-gray-800">Profil</h2>
                            <p class="mt-2 text-sm leading-6 text-gray-700">
                                Diese Informationen werden öffentlich angezeigt. Überlegen Sie sich gut, was Sie teilen möchten.
                            </p>

                            <div class="mt-10 grid grid-cols-1 gap-x-6 gap-y-8 sm:grid-cols-6">
                                <!-- Profilbild -->
                                <div class="col-span-full">
                                    <label for="photo" class="block text-sm font-semibold text-gray-800 mb-2 ">Foto</label>
                                    <div class="mt-2 flex items-center gap-x-3">
                                        <% if (doctor.photo) { %>
                                            <img src="/uploads/<%= doctor.photo %>" alt="Profilfoto" class="h-24 w-24 rounded-full object-cover">
                                        <% } else { %>
                                            <svg class="h-24 w-24 text-gray-300" viewBox="0 0 24 24" fill="currentColor" aria-hidden="true">
                                                <path fill-rule="evenodd" d="M18.685 19.097A9.723 9.723 0 0021.75 12c0-5.385-4.365-9.75-9.75-9.75S2.25 6.615 2.25 12a9.723 9.723 0 003.065 7.097A9.716 9.716 0 0012 21.75a9.716 9.716 0 006.685-2.653zm-12.54-1.285A7.486 7.486 0 0112 15a7.486 7.486 0 015.855 2.812A8.224 8.224 0 0112 20.25a8.224 8.224 0 01-5.855-2.438zM15.75 9a3.75 3.75 0 11-7.5 0 3.75 3.75 0 017.5 0z" clip-rule="evenodd" />
                                            </svg>
                                        <% } %>
                                        <input type="file" name="photo" id="photo" accept="image/*" class="hidden">
                                        <button type="button" onclick="document.getElementById('photo').click()" class="rounded-lg bg-white px-4 py-2 text-sm font-semibold text-gray-800 border border-gray-300 hover:bg-gray-50">
                                            Ändern
                                        </button>
                                        <% if (doctor.photo) { %>
                                        <button type="button" onclick="if(confirm('Profilfoto wirklich löschen?')) document.getElementById('deletePhotoForm').submit();" class="rounded-lg bg-red-50 px-4 py-2 text-sm font-semibold text-red-700 border border-red-200 hover:bg-red-100">
                                            Löschen
                                        </button>
                                        <% } %>
                                    </div>
                                    <p class="mt-3 text-sm leading-6 text-gray-700">Erlaubte Formate: JPG, JPEG, PNG. Maximale Größe: 4MB. Empfohlene Auflösung: 1200x1200 Pixel.</p>
                                </div>

                                <!-- Über mich -->
                                <div class="col-span-full">
                                    <label for="additionalInfo" class="block text-sm font-semibold text-gray-800 mb-2 ">Über mich</label>
                                    <div class="mt-2">
                                        <textarea id="additionalInfo" name="additionalInfo" rows="6" class="block w-full border border-gray-300 rounded-lg p-3 border p-3 text-gray-800 border border-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 ease-in-out sm:text-sm sm:leading-6"><%= doctor.additionalInfo || '' %></textarea>
                                    </div>
                                    <p class="mt-3 text-sm leading-6 text-gray-700">Ein paar Sätze über Sie und Ihre Praxis.</p>
                                </div>

                            </div>
                        </div>

                        <!-- Persönliche Informationen -->
                        <div class="border-b border-gray-900/10 pb-12">
                            <h2 class="text-base font-semibold leading-7 text-gray-800">Persönliche Informationen</h2>
                         
                            <!-- Hidden title field for backend compatibility -->
                            <input type="hidden" id="title" name="title" value="<%= doctor.title || 'Herr' %>">
                            
                            <div class="mt-10 grid grid-cols-1 gap-x-6 gap-y-8 sm:grid-cols-6">
                                <div class="sm:col-span-3">
                                    <label for="academicTitle" class="block text-sm font-semibold text-gray-800 mb-2 ">Akademischer Titel</label>
                                    <div class="mt-2">
                                        <input type="text" id="academicTitle" name="academicTitle" value="<%= doctor.academicTitle || '' %>" class="block w-full rounded-lg border p-3 text-gray-800 border border-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 ease-in-out sm:text-sm sm:leading-6">
                                    </div>
                                </div>

                                <div class="sm:col-span-3">
                                    <label for="firstName" class="block text-sm font-semibold text-gray-800 mb-2 ">Vorname</label>
                                    <div class="mt-2">
                                        <input type="text" id="firstName" name="firstName" value="<%= doctor.firstName || '' %>" class="block w-full rounded-lg border p-3 text-gray-800 border border-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 ease-in-out sm:text-sm sm:leading-6">
                                    </div>
                                </div>

                                <div class="sm:col-span-3">
                                    <label for="lastName" class="block text-sm font-semibold text-gray-800 mb-2 ">Nachname</label>
                                    <div class="mt-2">
                                        <input type="text" id="lastName" name="lastName" value="<%= doctor.lastName || '' %>" class="block w-full rounded-lg border p-3 text-gray-800 border border-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 ease-in-out sm:text-sm sm:leading-6">
                                    </div>
                                </div>

                                <div class="col-span-full">
                                    <label for="mainSpecialty" class="block text-sm font-semibold text-gray-800 mb-2 ">Fachgebiet</label>
                                    <div class="mt-2">
                                        <select name="mainSpecialty" id="mainSpecialty" class="block w-full rounded-lg border p-3 text-gray-800 border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 ease-in-out sm:text-sm sm:leading-6">
                                            <option value="">Bitte wählen</option>
                                        </select>
                                    </div>
                                </div>

                                <div class="col-span-full">
                                    <label for="address" class="block text-sm font-semibold text-gray-800 mb-2 ">Adresse</label>
                                    <div class="mt-2">
                                        <input type="text" id="address" name="address" value="<%= doctor.street && doctor.zipCode && doctor.city ? `${doctor.street}, ${doctor.zipCode} ${doctor.city}` : (doctor.address || '') %>" placeholder="Beginnen Sie mit der Eingabe Ihrer Adresse..." class="block w-full rounded-lg border p-3 text-gray-800 border border-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 ease-in-out sm:text-sm sm:leading-6">
                                    </div>
                                    <p class="mt-1 text-sm text-gray-500">Wählen Sie eine Adresse aus den Vorschlägen für eine genaue Validierung</p>
                                </div>

                                <div class="col-span-full hidden">
                                    <label for="street" class="block text-sm font-semibold text-gray-800 mb-2 ">Straße und Hausnummer</label>
                                    <div class="mt-2">
                                        <input type="text" id="street" name="street" value="<%= doctor.street || '' %>" class="block w-full rounded-lg border p-3 text-gray-800 border border-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 ease-in-out sm:text-sm sm:leading-6">
                                    </div>
                                </div>

                                <div class="col-span-full">
                                    <label for="addressLine2" class="block text-sm font-semibold text-gray-800 mb-2 ">Adresszusatz (optional)</label>
                                    <div class="mt-2">
                                        <input type="text" id="addressLine2" name="addressLine2" value="<%= doctor.addressLine2 || '' %>" class="block w-full rounded-lg border p-3 text-gray-800 border border-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 ease-in-out sm:text-sm sm:leading-6" placeholder="z.B. Stiege, Tür, Stockwerk, Gebäude">
                                    </div>
                                    <p class="mt-1 text-sm text-gray-500">Zusätzliche Informationen zu Ihrer Adresse</p>
                                </div>

                                <div class="sm:col-span-2 sm:col-start-1 hidden">
                                    <label for="zipCode" class="block text-sm font-semibold text-gray-800 mb-2 ">PLZ</label>
                                    <div class="mt-2">
                                        <input type="text" id="zipCode" name="zipCode" value="<%= doctor.zipCode || '' %>" class="block w-full rounded-lg border p-3 text-gray-800 border border-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 ease-in-out sm:text-sm sm:leading-6">
                                    </div>
                                </div>

                                <div class="sm:col-span-4 hidden">
                                    <label for="city" class="block text-sm font-semibold text-gray-800 mb-2 ">Stadt</label>
                                    <div class="mt-2">
                                        <input type="text" id="city" name="city" value="<%= doctor.city || '' %>" class="block w-full rounded-lg border p-3 text-gray-800 border border-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 ease-in-out sm:text-sm sm:leading-6">
                                    </div>
                                </div>

                                <div class="sm:col-span-4">
                                    <label for="email" class="block text-sm font-semibold text-gray-800 mb-2 ">E-Mail</label>
                                    <div class="mt-2">
                                        <input type="email" id="email" name="email" value="<%= doctor.email || '' %>" class="block w-full rounded-lg border p-3 text-gray-800 border border-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 ease-in-out sm:text-sm sm:leading-6">
                                    </div>
                                </div>

                                <div class="sm:col-span-4">
                                    <label for="phone" class="block text-sm font-semibold text-gray-800 mb-2 ">Telefon</label>
                                    <div class="mt-2">
                                        <input type="tel" id="phone" name="phone" value="<%= doctor.phone || '' %>" class="block w-full rounded-lg border p-3 text-gray-800 border border-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 ease-in-out sm:text-sm sm:leading-6">
                                    </div>
                                </div>

                                <div class="sm:col-span-4">
                                    <label for="website" class="block text-sm font-semibold text-gray-800 mb-2 ">Website</label>
                                    <div class="mt-2">
                                        <input type="url" id="website" name="website" value="<%= doctor.website || '' %>" class="block w-full rounded-lg border p-3 text-gray-800 border border-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 ease-in-out sm:text-sm sm:leading-6">
                                    </div>
                                </div>

                                <!-- Passwort ändern -->
                                <div class="col-span-full">
                                    <label class="block text-sm font-semibold text-gray-800 mb-2 ">Passwort ändern</label>
                                    <div class="mt-2 max-w-md">
                                        <div class="grid grid-cols-1 gap-x-4 gap-y-4 sm:grid-cols-3">
                                            <div>
                                                <label for="currentPassword" class="block text-xs text-gray-500 mb-1">Aktuelles Passwort</label>
                                                <input type="password" id="currentPassword" name="currentPassword" class="block w-full rounded-lg border p-3 text-gray-800 border border-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 ease-in-out sm:text-sm sm:leading-6" placeholder="Aktuelles Passwort">
                                            </div>
                                            <div>
                                                <label for="newPassword" class="block text-xs text-gray-500 mb-1">Neues Passwort</label>
                                                <input type="password" id="newPassword" name="newPassword" class="block w-full rounded-lg border p-3 text-gray-800 border border-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 ease-in-out sm:text-sm sm:leading-6" placeholder="Neues Passwort">
                                            </div>
                                            <div>
                                                <label for="confirmPassword" class="block text-xs text-gray-500 mb-1">Bestätigen</label>
                                                <input type="password" id="confirmPassword" name="confirmPassword" class="block w-full rounded-lg border p-3 text-gray-800 border border-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 ease-in-out sm:text-sm sm:leading-6" placeholder="Neues Passwort bestätigen">
                                            </div>
                                        </div>
                                    </div>
                                    <p class="mt-1 text-sm text-gray-500">Leer lassen, um das Passwort nicht zu ändern</p>
                                </div>

                                <div class="col-span-full">
                                    <div class="flex items-center">
                                        <input type="checkbox" id="showEmail" name="showEmail" value="true" <%= doctor.showEmail ? 'checked' : '' %> class="h-4 w-4 rounded border-gray-300 text-blue-600 focus:ring-blue-500">
                                        <label for="showEmail" class="ml-3 block text-sm ">
                                            E-Mail-Adresse öffentlich anzeigen
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Kassenverträge -->
                        <div class="border-b border-gray-900/10 pb-12">
                            <h2 class="text-base font-semibold leading-7 text-gray-800">Kassenverträge</h2>
                            <p class="mt-1 text-sm leading-6 text-gray-700">Wählen Sie Ihre Vertragspartner aus.</p>

                            <div class="mt-10 space-y-10">
                                <fieldset>
                                    <div class="mt-6 space-y-6">
                                        <div class="flex items-center gap-x-3">
                                            <input type="radio" id="noContract" name="insuranceType" value="noContract"
                                                <%= (doctor.insurance?.noContract || doctor.insuranceType === 'noContract') ? 'checked' : '' %>
                                                class="h-4 w-4 border-gray-300 text-blue-600 focus:ring-blue-500">
                                            <label for="noContract" class="block text-sm font-semibold text-gray-800 mb-2 ">
                                                Keine - Nur Wahlarzt
                                            </label>
                                        </div>

                                        <div class="flex items-center gap-x-3">
                                            <input type="radio" id="hasContract" name="insuranceType" value="hasContract"
                                                <%= (!doctor.insurance?.noContract && doctor.insuranceType !== 'noContract') ? 'checked' : '' %>
                                                class="h-4 w-4 border-gray-300 text-blue-600 focus:ring-blue-500">
                                            <label for="hasContract" class="block text-sm font-semibold text-gray-800 mb-2 ">
                                                Kassenverträge mit:
                                            </label>
                                        </div>

                                        <div class="ml-6 space-y-6" id="insuranceOptions">
                                            <!-- Hidden inputs to ensure values are always sent (using flat names for multer compatibility) -->
                                            <input type="hidden" name="insurance_oegk" value="<%= (doctor.insurance && doctor.insurance.oegk) ? 'true' : 'false' %>" id="hidden_oegk">
                                            <input type="hidden" name="insurance_svs" value="<%= (doctor.insurance && doctor.insurance.svs) ? 'true' : 'false' %>" id="hidden_svs">
                                            <input type="hidden" name="insurance_bvaeb" value="<%= (doctor.insurance && doctor.insurance.bvaeb) ? 'true' : 'false' %>" id="hidden_bvaeb">
                                            <input type="hidden" name="insurance_kfa" value="<%= (doctor.insurance && doctor.insurance.kfa) ? 'true' : 'false' %>" id="hidden_kfa">
                                            
                                            <div class="relative flex gap-x-3">
                                                <div class="flex h-6 items-center">
                                                    <input type="checkbox" id="oegk" data-insurance="oegk"
                                                        <%= doctor.insurance && doctor.insurance.oegk ? 'checked' : '' %>
                                                        class="h-4 w-4 rounded border-gray-300 text-blue-600 focus:ring-blue-500">
                                                </div>
                                                <div class="text-sm leading-6">
                                                    <label for="oegk" class="font-semibold text-gray-800">ÖGK</label>
                                                </div>
                                            </div>

                                            <div class="relative flex gap-x-3">
                                                <div class="flex h-6 items-center">
                                                    <input type="checkbox" id="svs" data-insurance="svs"
                                                        <%= doctor.insurance && doctor.insurance.svs ? 'checked' : '' %>
                                                        class="h-4 w-4 rounded border-gray-300 text-blue-600 focus:ring-blue-500">
                                                </div>
                                                <div class="text-sm leading-6">
                                                    <label for="svs" class="font-semibold text-gray-800">SVS</label>
                                                </div>
                                            </div>

                                            <div class="relative flex gap-x-3">
                                                <div class="flex h-6 items-center">
                                                    <input type="checkbox" id="bvaeb" data-insurance="bvaeb"
                                                        <%= doctor.insurance && doctor.insurance.bvaeb ? 'checked' : '' %>
                                                        class="h-4 w-4 rounded border-gray-300 text-blue-600 focus:ring-blue-500">
                                                </div>
                                                <div class="text-sm leading-6">
                                                    <label for="bvaeb" class="font-semibold text-gray-800">BVAEB</label>
                                                </div>
                                            </div>

                                            <div class="relative flex gap-x-3">
                                                <div class="flex h-6 items-center">
                                                    <input type="checkbox" id="kfa" data-insurance="kfa"
                                                        <%= doctor.insurance && doctor.insurance.kfa ? 'checked' : '' %>
                                                        class="h-4 w-4 rounded border-gray-300 text-blue-600 focus:ring-blue-500">
                                                </div>
                                                <div class="text-sm leading-6">
                                                    <label for="kfa" class="font-semibold text-gray-800">KFA</label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </fieldset>
                            </div>
                        </div>
                    </div>

                    <div class="mt-6 flex flex-col items-end gap-x-6 gap-y-3">
                        <button type="submit" class="bg-blue-600 hover:bg-blue-700 text-white font-semibold py-3 px-6 rounded-lg shadow-md hover:shadow-lg transition-all duration-200 ease-in-out">
                            Speichern
                        </button>
                    </div>
                </form>
                
                <!-- Separate form for deleting profile photo (must not be nested) -->
                <form id="deletePhotoForm" action="/profile/photo/delete" method="POST" style="display:none;"></form>
                
                <!-- Bildergalerie -->
                <div class="mt-12 border-t border-gray-900/10 pt-10">
                    <h2 class="text-base font-semibold leading-7 text-gray-800">Bildergalerie</h2>
                    <p class="mt-1 text-sm leading-6 text-gray-700">
                        Ihre Ordinationsfotos
                    </p>
                    
                    <div class="mt-6 flex flex-col gap-4">
                        <% if (doctor.galleryPhotos && doctor.galleryPhotos.length > 0) { %>
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                                <% doctor.galleryPhotos.forEach(photo => { %>
                                <div class="relative group">
                                    <img src="/uploads/<%= photo %>" 
                                         alt="Ordinationsfoto" 
                                         class="w-full h-auto rounded-2xl shadow-md"
                                         style="aspect-ratio: 4/3; object-fit: cover;">
                                    <form action="/delete-gallery-photo" method="POST" class="absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition-opacity">
                                        <input type="hidden" name="photoName" value="<%= photo %>">
                                        <button type="submit" class="bg-red-600 text-white p-2 rounded-full hover:bg-red-700">
                                            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                                            </svg>
                                        </button>
                                    </form>
                                </div>
                                <% }); %>
                            </div>
                        <% } else { %>
                            <p class="text-sm text-gray-500">Noch keine Fotos hinzugefügt.</p>
                        <% } %>
                        
                        <% if (!doctor.galleryPhotos || doctor.galleryPhotos.length < 3) { %>
                            <form action="/profile/edit" method="POST" enctype="multipart/form-data" class="flex items-center gap-x-3">
                                <input type="file" name="galleryPhotos" id="galleryPhotos" accept="image/*" multiple class="hidden">
                                <button type="button" 
                                        onclick="document.getElementById('galleryPhotos').click()" 
                                        class="rounded-lg bg-white px-4 py-2 text-sm font-semibold text-gray-800 border border-gray-300 hover:bg-gray-50">
                                    Fotos hinzufügen
                                </button>
                            </form>
                        <% } %>
                    </div>
                    <p class="mt-3 text-sm leading-6 text-gray-700">Erlaubte Formate: JPG, JPEG, PNG. Maximale Größe: 4MB.</p>
                </div>
                
                <!-- Google Maps Box hinzufügen -->
                <div class="mt-12 border-t border-gray-900/10 pt-10">
                    <h2 class="text-base font-semibold leading-7 text-gray-800">Standort</h2>
                    <p class="mt-1 text-sm leading-6 text-gray-700">
                        Hier finden Sie den Standort der Praxis. Klicken Sie auf die Karte, um die Route zu planen.
                    </p>
                    
                    <div class="mt-6">
                        <div id="map" class="w-full h-96 rounded-2xl shadow-md"></div>
                    </div>
                </div>
            </div>
        </main>
    </div>

    <!-- Spezifische JavaScript-Daten aus dem Server -->
    <div id="js-data" 
        data-specialties="<%= JSON.stringify(specialties) %>"
        data-main-specialty="<%= doctor.mainSpecialty || (doctor.specialties && doctor.specialties[0]) || '' %>"
        data-google-maps-api-key="<%= googleMapsApiKey %>"
        style="display: none;">
    </div>
    
    <script>
        // Daten aus dem verborgenen Element laden
        const dataElement = document.getElementById('js-data');
        const specialtiesData = JSON.parse(dataElement.dataset.specialties);

        // Auto-submit on file selection
        (function autoSubmitOnFileChange(){
            try {
                var form = document.getElementById('profileForm');
                var photoInput = document.getElementById('photo');
                var galleryInput = document.getElementById('galleryPhotos');
                if (photoInput && form) photoInput.addEventListener('change', function(){ if (this.files && this.files.length) form.submit(); });
                if (galleryInput && form) galleryInput.addEventListener('change', function(){ if (this.files && this.files.length) form.submit(); });
            } catch(_) {}
        })();

        // Update specialty dropdown based on title
        function updateSpecialtyDropdown(selectedTitle) {
            const specialtySelect = document.getElementById('mainSpecialty');
            if (!specialtySelect) return;
            
            const specialtyType = selectedTitle === 'Frau' ? 'female' : 'male';
            const specialtyList = specialtiesData[specialtyType] || specialtiesData.male;
            const currentValue = specialtySelect.value || dataElement.dataset.mainSpecialty;
            
            // Leere Dropdown-Optionen
            specialtySelect.innerHTML = '<option value="">Bitte wählen</option>';
            
            // Füge neue Optionen hinzu
            Object.entries(specialtyList).forEach(([key, value]) => {
                const option = document.createElement('option');
                option.value = key;
                option.textContent = value;
                if (currentValue === key) {
                    option.selected = true;
                }
                specialtySelect.appendChild(option);
            });
        }

        // Initialize specialty dropdown based on existing title
        const titleHidden = document.getElementById('title');
        const specialtySelect = document.getElementById('mainSpecialty');
        
        if (titleHidden && specialtySelect) {
            updateSpecialtyDropdown(titleHidden.value || 'Herr');
        }

        // Initialer Zustand für Versicherungsoptionen
        const hasContract = document.getElementById('hasContract');
        const insuranceOptions = document.getElementById('insuranceOptions');
        if (hasContract && insuranceOptions) {
            insuranceOptions.style.display = 'block';

            document.querySelectorAll('input[name="insuranceType"]').forEach(radio => {
                radio.addEventListener('change', function() {
                    const checkboxes = document.querySelectorAll('#insuranceOptions input[type="checkbox"]');
                    
                    if (this.value === 'hasContract') {
                        checkboxes.forEach(checkbox => {
                            checkbox.disabled = false;
                            checkbox.parentElement.style.opacity = '1';
                        });
                    } else if (this.value === 'noContract') {
                        checkboxes.forEach(checkbox => {
                            checkbox.checked = false;
                            checkbox.disabled = true;
                            checkbox.parentElement.style.opacity = '0.5';
                        });
                    }
                });
            });
            
            const currentSelection = document.querySelector('input[name="insuranceType"]:checked');
            if (currentSelection) {
                currentSelection.dispatchEvent(new Event('change'));
            }
        }

        // Update hidden inputs when checkboxes change
        const insuranceCheckboxes = document.querySelectorAll('#insuranceOptions input[type="checkbox"]');
        console.log('Found insurance checkboxes:', insuranceCheckboxes.length);
        insuranceCheckboxes.forEach(checkbox => {
            const insuranceType = checkbox.getAttribute('data-insurance');
            const hiddenInput = document.getElementById('hidden_' + insuranceType);
            console.log('Insurance checkbox:', insuranceType, 'hidden input:', hiddenInput ? 'found' : 'NOT FOUND', 'checked:', checkbox.checked);
            
            // Initialize hidden input value on page load
            if (hiddenInput) {
                hiddenInput.value = checkbox.checked ? 'true' : 'false';
                console.log('Initialized', insuranceType, 'to', hiddenInput.value);
            }
            
            checkbox.addEventListener('change', function() {
                const insuranceType = this.getAttribute('data-insurance');
                const hiddenInput = document.getElementById('hidden_' + insuranceType);
                if (hiddenInput) {
                    hiddenInput.value = this.checked ? 'true' : 'false';
                    console.log('Updated', insuranceType, 'to', hiddenInput.value);
                } else {
                    console.error('Hidden input not found for', insuranceType);
                }
            });
        });

        // Ensure all insurance checkboxes update hidden inputs before form submission
        const profileForm = document.getElementById('profileForm');
        if (profileForm) {
            profileForm.addEventListener('submit', function(e) {
                console.log('Form submitting - updating insurance values');
                // Update all hidden inputs based on current checkbox state
                insuranceCheckboxes.forEach(checkbox => {
                    const insuranceType = checkbox.getAttribute('data-insurance');
                    const hiddenInput = document.getElementById('hidden_' + insuranceType);
                    if (hiddenInput) {
                        // If checkbox is disabled or insuranceType is noContract, set to false
                        const insuranceTypeRadio = document.querySelector('input[name="insuranceType"]:checked');
                        if (insuranceTypeRadio && insuranceTypeRadio.value === 'noContract') {
                            hiddenInput.value = 'false';
                        } else {
                            hiddenInput.value = checkbox.checked ? 'true' : 'false';
                        }
                        console.log('Final value for', insuranceType, ':', hiddenInput.value, '(checkbox checked:', checkbox.checked, ')');
                    } else {
                        console.error('Hidden input not found for', insuranceType, 'during form submit');
                    }
                });
                
                // Log all form data being submitted
                const formData = new FormData(profileForm);
                console.log('Form data being submitted:');
                for (let [key, value] of formData.entries()) {
                    if (key.startsWith('insurance')) {
                        console.log('  ', key, ':', value);
                    }
                }
                // Don't prevent default - let form submit normally
            });
        } else {
            console.error('Profile form not found!');
        }

        // Google Maps Places API für Adressvalidierung
        function initAutocomplete() {
            try {
                const streetInput = document.getElementById('street');
                const zipCodeInput = document.getElementById('zipCode');
                const cityInput = document.getElementById('city');
                const addressInput = document.getElementById('address');

                const streetVal = streetInput.value;
                const zipCodeVal = zipCodeInput.value;
                const cityVal = cityInput.value;

                if (streetVal && zipCodeVal && cityVal) {
                    addressInput.value = `${streetVal}, ${zipCodeVal} ${cityVal}`;
                }

                const autocompleteOptions = {
                    componentRestrictions: { country: ['at'] },
                    fields: ['address_component', 'geometry', 'name', 'formatted_address']
                    // No types restriction - allows both addresses and businesses (establishments)
                };

                const autocomplete = new google.maps.places.Autocomplete(addressInput, autocompleteOptions);
                
                addressInput.addEventListener('focus', function() {
                    this.select();
                });

                autocomplete.addListener('place_changed', function () {
                    try {
                        const place = autocomplete.getPlace();

                        if (!place || !place.geometry) {
                            addressInput.classList.add('border-red-500');
                            return;
                        }

                        addressInput.classList.remove('border-red-500');

                        // Use formatted_address if available (works for both establishments and addresses)
                        let formattedAddress = place.formatted_address || '';
                        if (formattedAddress) {
                            addressInput.value = formattedAddress;
                        } else if (place.name) {
                            addressInput.value = place.name;
                        }

                        let streetFromPlace = '';
                        let streetNumber = '';
                        let zipCode = '';
                        let city = '';

                        for (const component of place.address_components || []) {
                            const types = component.types;
                            
                            if (types.includes('route')) {
                                streetFromPlace = component.long_name;
                            }
                            if (types.includes('street_number')) {
                                streetNumber = component.long_name;
                            }
                            if (types.includes('postal_code')) {
                                zipCode = component.long_name;
                            }
                            if (types.includes('locality')) {
                                city = component.long_name;
                            }
                        }

                        // For businesses without route, use place name as street
                        if (!streetFromPlace && place.name) {
                            streetFromPlace = place.name;
                        }

                        const fullStreet = streetFromPlace + (streetNumber ? ' ' + streetNumber : '');

                        streetInput.value = fullStreet;
                        zipCodeInput.value = zipCode;
                        cityInput.value = city;

                        initMap();
                    } catch (error) {
                        console.error('Fehler bei place_changed:', error);
                        streetInput.value = addressInput.value;
                    }
                });
            } catch (error) {
                console.error('Fehler bei Autocomplete-Initialisierung:', error);
            }
        }

        // Map-Variablen
        let map;
        let marker;

        function initMap() {
            try {
                const mapDiv = document.getElementById('map');
                if (!mapDiv || !window.google || !window.google.maps) return;

                const street = document.getElementById('street').value;
                const zipCode = document.getElementById('zipCode').value;
                const city = document.getElementById('city').value;
                const address = document.getElementById('address').value;
                
                let fullAddress = '';
                if (street && zipCode && city) {
                    fullAddress = `${street}, ${zipCode} ${city}, Österreich`;
                } else if (address) {
                    fullAddress = address + ', Österreich';
                }
                
                if (!fullAddress) {
                    const defaultPosition = { lat: 48.2082, lng: 16.3738 };
                    map = new google.maps.Map(mapDiv, {
                        center: defaultPosition,
                        zoom: 13,
                        mapTypeControl: false
                    });
                    return;
                }
                
                const geocoder = new google.maps.Geocoder();
                geocoder.geocode({ address: fullAddress }, function(results, status) {
                    if (status === google.maps.GeocoderStatus.OK && results[0]) {
                        const position = results[0].geometry.location;
                        
                        map = new google.maps.Map(mapDiv, {
                            center: position,
                            zoom: 15,
                            mapTypeControl: false
                        });
                        
                        marker = new google.maps.Marker({
                            position: position,
                            map: map,
                            title: fullAddress
                        });
                        
                        const infoWindow = new google.maps.InfoWindow({
                            content: `<div><h3 class="font-bold">Praxisstandort</h3><p>${fullAddress}</p></div>`
                        });
                        
                        marker.addListener('click', function() {
                            infoWindow.open(map, marker);
                        });
                        
                        infoWindow.open(map, marker);
                    } else {
                        const defaultPosition = { lat: 48.2082, lng: 16.3738 };
                        map = new google.maps.Map(mapDiv, {
                            center: defaultPosition,
                            zoom: 12
                        });
                    }
                });
            } catch (error) {
                console.error('Fehler bei der Karteninitialisierung:', error);
            }
        }

        function initPage() {
            initAutocomplete();
            initMap();
        }

        function loadGoogleMapsAPI() {
            const apiKey = dataElement.dataset.googleMapsApiKey;
            if (!apiKey) {
                console.warn('Google Maps API key nicht gefunden. Karte wird nicht geladen.');
                return;
            }

            const script = document.createElement('script');
            script.src = `https://maps.googleapis.com/maps/api/js?key=${apiKey}&libraries=places&callback=initPage&v=weekly`;
            script.async = true;
            script.defer = true;

            script.onerror = function () {
                console.error('Fehler beim Laden der Google Maps API');
            };

            document.head.appendChild(script);
        }

        loadGoogleMapsAPI();

        // Show SweetAlert2 message if there's a session message
        <% if (message) { %>
            Swal.fire({
                icon: '<%= message.type === 'success' ? 'success' : message.type === 'error' ? 'error' : 'info' %>',
                title: '<%= message.type === 'success' ? 'Erfolg' : message.type === 'error' ? 'Fehler' : 'Hinweis' %>',
                text: '<%= message.text %>',
                confirmButtonColor: '<%= message.type === 'success' ? '#10b981' : message.type === 'error' ? '#ef4444' : '#3b82f6' %>'
            });
        <% } %>
    </script>
</body>
</html>
